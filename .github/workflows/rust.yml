name: Rust
on: [push]

jobs:
  buildForSomePlatforms:
    name: Build Windows ${{ matrix.config.arch }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { arch: x86_64, bits: 64 }
          - { arch: i686, bits: 32 }

    steps:
      - uses: actions/checkout@v2

      # Cache for normal pushes
      - name: Cache cargo registry
        uses: actions/cache@v1
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-${{ matrix.config.arch }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.config.arch }}-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v1
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-${{ matrix.config.arch }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.config.arch }}-cargo-index-
      - name: Cache cargo build
        uses: actions/cache@v1
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.config.arch }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.config.arch }}-cargo-build-target-

      # Cache for releases
      - name: Cache cargo registry
        uses: actions/cache@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-${{ matrix.config.arch }}-release-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.config.arch }}-release-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-${{ matrix.config.arch }}-release-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.config.arch }}-release-cargo-index-
      - name: Cache cargo build
        uses: actions/cache@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.config.arch }}-release-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.config.arch }}-release-cargo-build-target-

      - name: Install deps
        run: |
          iwr -useb get.scoop.sh | iex
          echo "##[add-path]$HOME\scoop\shims"
          echo "##[add-path]C:\ProgramData\scoop\shims"
          scoop install aria2
          scoop install --arch ${{ matrix.config.bits }}bit llvm
          echo "::set-env name=LIBCLANG_PATH::$HOME\scoop\apps\llvm\current\bin"
          aria2c 'http://opensource.spotify.com/cefbuilds/cef_binary_81.2.17%2Bgb382c62%2Bchromium-81.0.4044.113_windows${{ matrix.config.bits }}.tar.bz2' -o cef_binary.tar.bz2
          7z x -y 'cef_binary.tar.bz2'
          Remove-Item 'cef_binary.tar.bz2'
          7z x -y 'cef_binary.tar'
          Remove-Item 'cef_binary.tar'
          Get-ChildItem 'cef_binary_*' | Rename-Item -NewName 'cef_binary'
          Move-Item -Path 'cef_binary' -Destination 'cef_interface'

      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.config.arch }}-pc-windows-msvc
          toolchain: nightly-${{ matrix.config.arch }}-pc-windows-msvc
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          target: ${{ matrix.config.arch }}-pc-windows-msvc
          command: build

      - name: Test
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          target: ${{ matrix.config.arch }}-pc-windows-msvc
          command: test
          args: -- --nocapture

      - name: Build Release
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          target: ${{ matrix.config.arch }}-pc-windows-msvc
          command: build
          args: --release

      - run: Rename-Item -Path "target\release\classicube_cef_plugin.dll" -NewName "classicube_cef_windows_${{ matrix.config.arch }}.dll"
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/classicube_cef_windows_${{ matrix.config.arch }}.dll
            target/release/build/classicube-cef-plugin-*/out/cefsimple.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  linux:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Install deps
#        run: |
#          sudo apt-get -y update
#          sudo apt-get -y install clang llvm
#          sudo apt-get -y install libglib2.0-dev libcairo2-dev libpango1.0-dev libatk1.0-dev libgdk-pixbuf2.0-dev libgtk-3-dev
#
#      - name: Install nightly
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: nightly
#          override: true
#
#      - name: Build
#        uses: actions-rs/cargo@v1
#        with:
#          command: build
#
#      - name: Test
#        uses: actions-rs/cargo@v1
#        with:
#          command: test
#          args: -- --nocapture
#
#      - name: Build Release
#        uses: actions-rs/cargo@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          command: build
#          args: --release
#
#      - run: mv target/release/libclassicube_cef_plugin.so target/release/classicube_cef_linux_amd64.so
#        if: startsWith(github.ref, 'refs/tags/')
#
#      - name: Upload Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: target/release/classicube_cef_linux_amd64.so
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  mac:
#    runs-on: macOS-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Install deps
#        run: |
#          brew install llvm
#          echo "##[add-path]/usr/local/opt/llvm/bin"
#
#      - name: Install nightly
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: nightly
#          override: true
#
#      - name: Build
#        uses: actions-rs/cargo@v1
#        with:
#          command: build
#
#      - name: Test
#        uses: actions-rs/cargo@v1
#        with:
#          command: test
#          args: -- --nocapture
#
#      - name: Build Release
#        uses: actions-rs/cargo@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          command: build
#          args: --release
#
#      - run: mv target/release/libclassicube_cef_plugin.dylib target/release/classicube_cef_macos_amd64.dylib
#        if: startsWith(github.ref, 'refs/tags/')
#
#      - name: Upload Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: target/release/classicube_cef_macos_amd64.dylib
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
